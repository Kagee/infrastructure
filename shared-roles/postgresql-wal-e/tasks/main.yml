- become: yes
  tags: postgresql-wal-e
  block:
    - name: Packages for WAL-E
      # Don't want to remove packages other might want installed
      when: postgresql_wal_e__state == 'present'
      apt:
        name: "{{ items }}"
        install_recommends: no
      vars:
        items:
          - pv
          - lzop

    - name: pip
      become: yes
      become_user: postgres
      vars:
        ansible_ssh_pipelining: true
        items:
          - wal-e
          - envdir
      pip:
        name: "{{ items }}"
        virtualenv: "{{ pwe_venv }}"
        virtualenv_python: python3

- become: yes
  tags: postgresql-wal-e
  when: postgresql_wal_e__state == 'absent'
  block:
    - stat:
        path: /etc/systemd/system/postgresql-base-backup@.timer
      register: postgresql_base_backup_timer
    - name: Disable systemd timer for backup
      when: postgresql_base_backup_timer.stat.exists
      systemd:
        enabled: no
        name: postgresql-base-backup@{{ pwe_major }}-{{ pwe_instance }}.timer
    - name: rmdir
      notify:
        - restart postgresql
        - systemctl daemon-reload
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /etc/wal-e/{{ pwe_major }}-{{ pwe_instance }}-env.d
        - /etc/postgresql/{{ pwe_major }}/{{ pwe_instance }}/conf.d/bitraf-backup.conf
        - /etc/systemd/system/postgresql-base-backup@.service
        - /etc/systemd/system/postgresql-base-backup@.timer

- become: yes
  tags: postgresql-wal-e
  when: postgresql_wal_e__state == 'present'
  block:
    - name: Config dir
      file:
        path: /etc/wal-e/{{ pwe_major }}-{{ pwe_instance }}-env.d
        state: directory
        mode: u=rwx,g=rx,o=
        group: postgres

    - name: Config entry
      notify: restart postgresql
      copy:
        dest: "/etc/wal-e/{{ pwe_major }}-{{ pwe_instance }}-env.d/{{ item.key }}"
        content: "{{ item.value }}"
        mode: u=rwx,g=rx,o=
        group: postgres
      with_items:
        - key: "WALE_FILE_PREFIX"
          value: "file://localhost/var/lib/postgresql/backups"

    - name: PostgreSQL config
      notify: restart postgresql
      copy:
        dest: /etc/postgresql/{{ pwe_major }}/{{ pwe_instance }}/conf.d/bitraf-backup.conf
        content: |
          wal_level = archive
          archive_mode = on
          archive_command = '{{ pwe_venv }}/bin/envdir /etc/wal-e/{{ pwe_major }}-{{ pwe_instance }}-env.d {{ pwe_venv }}/bin/wal-e wal-push %p'
          archive_timeout = 60

    - name: systemd base backup service
      register: base_backup_service
      copy:
        dest: /etc/systemd/system/postgresql-base-backup@.service
        content: |
          [Unit]
          Description=PostgreSQL base backup

          [Service]
          Type=oneshot
          ExecStart=/usr/bin/env bash -c 'i="%i"; i=${i/-//}; bin/envdir /etc/wal-e/%i-env.d bin/wal-e backup-push /var/lib/postgresql/$i'
          WorkingDirectory={{ pwe_venv }}
          User=postgres

    - name: systemd base backup timer
      register: base_backup_timer
      copy:
        dest: /etc/systemd/system/postgresql-base-backup@.timer
        content: |
          [Unit]
          Description=PostgreSQL base backup timer

          [Timer]
          OnCalendar=Sun 04:00

          [Install]
          WantedBy=timers.target

    - name: systemd daemon-reload
      when: base_backup_service.changed or base_backup_timer.changed
      systemd:
        daemon_reload: yes
        enabled: yes
        masked: no
        name: postgresql-base-backup@{{ pwe_major }}-{{ pwe_instance }}.timer

    - name: systemd base backup service cleaner
      register: base_backup_cleaner_service
      copy:
        dest: /etc/systemd/system/postgresql-base-backup-cleaner@.service
        content: |
          [Unit]
          Description=PostgreSQL base backup cleaner

          [Service]
          Type=oneshot
          ExecStart=/usr/bin/env bash -c 'i="%i"; i=${i/-//}; bin/envdir /etc/wal-e/%i-env.d bin/wal-e delete --confirm retain {{ pwe_retain }}'
          WorkingDirectory={{ pwe_venv }}
          User=postgres

    - name: systemd base backup cleaner timer
      register: base_backup_cleaner_timer
      copy:
        dest: /etc/systemd/system/postgresql-base-backup-cleaner@.timer
        content: |
          [Unit]
          Description=PostgreSQL base backup cleaner timer

          [Timer]
          OnCalendar=Sun 05:00

          [Install]
          WantedBy=timers.target

    - name: systemd daemon-reload
      when: base_backup_cleaner_service.changed or base_backup_cleaner_timer.changed
      systemd:
        daemon_reload: yes
        enabled: yes
        masked: no
        name: postgresql-base-backup-cleaner@{{ pwe_major }}-{{ pwe_instance }}.timer
